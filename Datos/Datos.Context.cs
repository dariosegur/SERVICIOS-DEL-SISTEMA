//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Datos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class LabManagerEntities : DbContext
    {
        public LabManagerEntities()
            : base("name=LabManagerEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Equipo> Equipoes { get; set; }
        public DbSet<Facultad> Facultads { get; set; }
        public DbSet<TipoEquipo> TipoEquipoes { get; set; }
        public DbSet<Anotacion> Anotacions { get; set; }
        public DbSet<Multa> Multas { get; set; }
        public DbSet<PrestamoRecepcion> PrestamoRecepcions { get; set; }
        public DbSet<Usuario> Usuarios { get; set; }
        public DbSet<TipoUsuario> TipoUsuarios { get; set; }
        public DbSet<Restriccion> Restriccions { get; set; }
        public DbSet<View_AnotacionesActivas> View_AnotacionesActivas { get; set; }
        public DbSet<View_MultasActivas> View_MultasActivas { get; set; }
        public DbSet<View_TipoEquipo> View_TipoEquipo { get; set; }
        public DbSet<View_UsuarioPrestamo> View_UsuarioPrestamo { get; set; }
        public DbSet<View_EquiposACargo> View_EquiposACargo { get; set; }
        public DbSet<View_PrestamoRecepcion> View_PrestamoRecepcion { get; set; }
        public DbSet<View_Estudiante> View_Estudiante { get; set; }
        public DbSet<View_Historial> View_Historial { get; set; }
        public DbSet<EstadoMulta> EstadoMultas { get; set; }
        public DbSet<View_Facultad> View_Facultad { get; set; }
        public DbSet<View_UsuarioAutentica> View_UsuarioAutentica { get; set; }
        public DbSet<View_Multas> View_Multas { get; set; }
        public DbSet<EstadoAnotacion> EstadoAnotacions { get; set; }
        public DbSet<View_Anotaciones> View_Anotaciones { get; set; }
        public DbSet<View_Historial_Estudiante> View_Historial_Estudiante { get; set; }
        public DbSet<View_Docente> View_Docente { get; set; }
        public DbSet<View_Historial_Docente> View_Historial_Docente { get; set; }
        public DbSet<View_Administrativo> View_Administrativo { get; set; }
        public DbSet<View_Auxiliar> View_Auxiliar { get; set; }
        public DbSet<View_Auxiliar_Activo> View_Auxiliar_Activo { get; set; }
        public DbSet<View_TipoEquipo_Activo> View_TipoEquipo_Activo { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<View_Menu> View_Menu { get; set; }
        public DbSet<Sede> Sedes { get; set; }
        public DbSet<View_Sede> View_Sede { get; set; }
        public DbSet<View_Restriccion> View_Restriccion { get; set; }
        public DbSet<RestriccionTipoEquipo> RestriccionTipoEquipoes { get; set; }
        public DbSet<View_RestriccionTipoEquipo> View_RestriccionTipoEquipo { get; set; }
        public DbSet<View_Historial_Equipo> View_Historial_Equipo { get; set; }
        public DbSet<View_Deudores> View_Deudores { get; set; }
        public DbSet<View_Menu_Reportes> View_Menu_Reportes { get; set; }
        public DbSet<View_Menu_Principal> View_Menu_Principal { get; set; }
        public DbSet<View_DetallePrestamoRecepcion> View_DetallePrestamoRecepcion { get; set; }
        public DbSet<View_Menu_Gestion> View_Menu_Gestion { get; set; }
        public DbSet<View_EstadisticasPrestamoEquipos> View_EstadisticasPrestamoEquipos { get; set; }
        public DbSet<View_Equipo> View_Equipo { get; set; }
        public DbSet<View_EstadoMultas> View_EstadoMultas { get; set; }
        public DbSet<Parametro> Parametroes { get; set; }
        public DbSet<EventoGestion> EventoGestions { get; set; }
        public DbSet<TipoEventoGestion> TipoEventoGestions { get; set; }
        public DbSet<View_CandidatosEliminar> View_CandidatosEliminar { get; set; }
        public DbSet<View_Inactivos> View_Inactivos { get; set; }
    
        [EdmFunction("LabManagerEntities", "Split")]
        public virtual IQueryable<Split_Result> Split(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Split_Result>("[LabManagerEntities].[Split](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        public virtual ObjectResult<View_Estudiante> Estudiante(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Estudiante>("Estudiante", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Estudiante> Estudiante(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Estudiante>("Estudiante", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Historial> Historial(string filtroTexto)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Historial>("Historial", filtroTextoParameter);
        }
    
        public virtual ObjectResult<View_Historial> Historial(string filtroTexto, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Historial>("Historial", mergeOption, filtroTextoParameter);
        }
    
        public virtual ObjectResult<View_Facultad> Facultades(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Facultad>("Facultades", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Facultad> Facultades(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Facultad>("Facultades", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_UsuarioAutentica> Validar(string user, string password)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_UsuarioAutentica>("Validar", userParameter, passwordParameter);
        }
    
        public virtual ObjectResult<View_UsuarioAutentica> Validar(string user, string password, MergeOption mergeOption)
        {
            var userParameter = user != null ?
                new ObjectParameter("user", user) :
                new ObjectParameter("user", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_UsuarioAutentica>("Validar", mergeOption, userParameter, passwordParameter);
        }
    
        public virtual ObjectResult<View_Docente> Docente(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Docente>("Docente", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Docente> Docente(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Docente>("Docente", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_TipoEquipo> TiposEquipo(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_TipoEquipo>("TiposEquipo", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_TipoEquipo> TiposEquipo(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_TipoEquipo>("TiposEquipo", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Administrativo> Administrativo(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Administrativo>("Administrativo", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Administrativo> Administrativo(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Administrativo>("Administrativo", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Auxiliar> Auxiliar(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Auxiliar>("Auxiliar", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Auxiliar> Auxiliar(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Auxiliar>("Auxiliar", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Equipo> Equipos(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Equipo>("Equipos", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Equipo> Equipos(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Equipo>("Equipos", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuario(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuario", usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuario(Nullable<long> usuarioId, MergeOption mergeOption)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuario", mergeOption, usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_Sede> Sede(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Sede>("Sede", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Sede> Sede(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Sede>("Sede", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Restriccion> Restricciones(string filtroTexto, Nullable<bool> filtroActivo)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Restriccion>("Restricciones", filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Restriccion> Restricciones(string filtroTexto, Nullable<bool> filtroActivo, MergeOption mergeOption)
        {
            var filtroTextoParameter = filtroTexto != null ?
                new ObjectParameter("FiltroTexto", filtroTexto) :
                new ObjectParameter("FiltroTexto", typeof(string));
    
            var filtroActivoParameter = filtroActivo.HasValue ?
                new ObjectParameter("FiltroActivo", filtroActivo) :
                new ObjectParameter("FiltroActivo", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Restriccion>("Restricciones", mergeOption, filtroTextoParameter, filtroActivoParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuarioReportes(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuarioReportes", usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuarioReportes(Nullable<long> usuarioId, MergeOption mergeOption)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuarioReportes", mergeOption, usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuarioPrincipal(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuarioPrincipal", usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuarioPrincipal(Nullable<long> usuarioId, MergeOption mergeOption)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuarioPrincipal", mergeOption, usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_DetallePrestamoRecepcion> DetallePrestamoRecepcion(Nullable<System.DateTime> filtroFechaInicio, Nullable<System.DateTime> filtroFechaFin, Nullable<int> facultadId)
        {
            var filtroFechaInicioParameter = filtroFechaInicio.HasValue ?
                new ObjectParameter("FiltroFechaInicio", filtroFechaInicio) :
                new ObjectParameter("FiltroFechaInicio", typeof(System.DateTime));
    
            var filtroFechaFinParameter = filtroFechaFin.HasValue ?
                new ObjectParameter("FiltroFechaFin", filtroFechaFin) :
                new ObjectParameter("FiltroFechaFin", typeof(System.DateTime));
    
            var facultadIdParameter = facultadId.HasValue ?
                new ObjectParameter("FacultadId", facultadId) :
                new ObjectParameter("FacultadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_DetallePrestamoRecepcion>("DetallePrestamoRecepcion", filtroFechaInicioParameter, filtroFechaFinParameter, facultadIdParameter);
        }
    
        public virtual ObjectResult<View_DetallePrestamoRecepcion> DetallePrestamoRecepcion(Nullable<System.DateTime> filtroFechaInicio, Nullable<System.DateTime> filtroFechaFin, Nullable<int> facultadId, MergeOption mergeOption)
        {
            var filtroFechaInicioParameter = filtroFechaInicio.HasValue ?
                new ObjectParameter("FiltroFechaInicio", filtroFechaInicio) :
                new ObjectParameter("FiltroFechaInicio", typeof(System.DateTime));
    
            var filtroFechaFinParameter = filtroFechaFin.HasValue ?
                new ObjectParameter("FiltroFechaFin", filtroFechaFin) :
                new ObjectParameter("FiltroFechaFin", typeof(System.DateTime));
    
            var facultadIdParameter = facultadId.HasValue ?
                new ObjectParameter("FacultadId", facultadId) :
                new ObjectParameter("FacultadId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_DetallePrestamoRecepcion>("DetallePrestamoRecepcion", mergeOption, filtroFechaInicioParameter, filtroFechaFinParameter, facultadIdParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuarioGestion(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuarioGestion", usuarioIdParameter);
        }
    
        public virtual ObjectResult<View_Menu> MenuUsuarioGestion(Nullable<long> usuarioId, MergeOption mergeOption)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<View_Menu>("MenuUsuarioGestion", mergeOption, usuarioIdParameter);
        }
    
        [EdmFunction("LabManagerEntities", "EstadisticasPrestamoEquipos")]
        public virtual IQueryable<View_EstadisticasPrestamoEquipos> EstadisticasPrestamoEquipos(Nullable<System.DateTime> filtroFechaInicio, Nullable<System.DateTime> filtroFechaFin)
        {
            var filtroFechaInicioParameter = filtroFechaInicio.HasValue ?
                new ObjectParameter("FiltroFechaInicio", filtroFechaInicio) :
                new ObjectParameter("FiltroFechaInicio", typeof(System.DateTime));
    
            var filtroFechaFinParameter = filtroFechaFin.HasValue ?
                new ObjectParameter("FiltroFechaFin", filtroFechaFin) :
                new ObjectParameter("FiltroFechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<View_EstadisticasPrestamoEquipos>("[LabManagerEntities].[EstadisticasPrestamoEquipos](@FiltroFechaInicio, @FiltroFechaFin)", filtroFechaInicioParameter, filtroFechaFinParameter);
        }
    
        public virtual int InactivarEstudiantes(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InactivarEstudiantes", usuarioIdParameter);
        }
    
        public virtual int ActivarEstudiantes(Nullable<long> usuarioId, Nullable<long> usuarioIdActivar)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            var usuarioIdActivarParameter = usuarioIdActivar.HasValue ?
                new ObjectParameter("UsuarioIdActivar", usuarioIdActivar) :
                new ObjectParameter("UsuarioIdActivar", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActivarEstudiantes", usuarioIdParameter, usuarioIdActivarParameter);
        }
    
        public virtual int EliminarEstudiantes(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarEstudiantes", usuarioIdParameter);
        }
    
        public virtual ObjectResult<InformacionEliminarEstudiantes_Result> InformacionEliminarEstudiantes(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<InformacionEliminarEstudiantes_Result>("InformacionEliminarEstudiantes", usuarioIdParameter);
        }
    }
}
